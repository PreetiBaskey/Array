#include<bits/stdc++.h>
using namespace std;

vector<vector<int>> mergeIntervals(vector<vector<int>> &intervals) {
    if(intervals.size() <= 0) {
        return intervals;
    }
    vector<vector<int>> result;
    vector<int> newInterval = intervals[0];
    
    for(vector<int> interval: intervals) {
        if(interval[0] <= newInterval[1]) {
            newInterval[1] = max(interval[1], newInterval[1]);
        }
        else {
            result.push_back(newInterval);
            newInterval = interval;
        }
    }
    
    result.push_back(newInterval);
    
    return result;
}

int main() {
    
    vector<vector<int>> arr = {{1, 3}, {2, 6}, {8, 10}, {15, 18}};
    // vector<vector<int>> arr = {{1, 4}, {4, 5}};
    
   sort(arr.begin(), arr.end());
    
    cout<<"Your interval array is :- "<<endl;
    for(int i = 0; i < arr.size(); i++) {
        for(int j = 0; j < arr[0].size(); j++) {
            cout<<arr[i][j]<<" ";
        }
        cout<<endl;
    }
    
    vector<vector<int>> ans = mergeIntervals(arr);
    cout<<"Merged intervals are :- "<<endl;
    for(const auto &interval: ans) {
        for(int data: interval) {
            cout<<data<<" ";
        }
        cout<<endl;
    }
    
    
    return 0;
}
