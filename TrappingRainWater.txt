#include<bits/stdc++.h>
using namespace std;

vector<int> getLeftMax(vector<int> &heights, int &n) {
    vector<int> leftMax(n);
    leftMax[0] = heights[0];
    
    for(int i = 1; i < n; i++) {
        leftMax[i] = max(leftMax[i - 1], heights[i]);
    }
    
    return leftMax;
}

vector<int> getRightMax(vector<int> &heights, int &n) {
    vector<int> rightMax(n);
    rightMax[n - 1] = heights[n - 1];
    
    for(int i = n - 2; i >= 0; i--) {
        rightMax[i] = max(rightMax[i + 1], heights[i]);
    }
    
    return rightMax;
}

int getSum(vector<int> &heights, int n) {
    int sum = 0;
    
    vector<int> leftMax = getLeftMax(heights, n);
    vector<int> rightMax = getRightMax(heights, n);
    
    for(int i = 0; i < n; i++) {
        int h = min(leftMax[i], rightMax[i]) - heights[i];
        sum += h;
    }
    
    return sum;
}

int main() {
    
    vector<int> heights = {4, 2, 0, 3, 2, 5};
    int n = heights.size();
    
    int result = getSum(heights, n);
    cout<<"Sum is :- "<<result;
    
    return 0;
}
