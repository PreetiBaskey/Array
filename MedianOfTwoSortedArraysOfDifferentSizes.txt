#include<bits/stdc++.h>
using namespace std;

double findMedianSortedArrays(vector<int> &num1, vector<int> &num2) {
    
    int n = num1.size();
    int m = num2.size();
    
    int l = 0;
    int r = n;
    
    while(l <= r) {
        int px = l + (r - l)/2;
        int py = (m + n + 1)/2 - px;
        
        //left half
        int x1 = (px == 0) ? INT_MIN : num1[px - 1];
        int x2 = (py == 0) ? INT_MIN : num2[py - 1];
        
        //right half
        int x3 = (px == n) ? INT_MAX : num1[px];
        int x4 = (py == m) ? INT_MAX : num2[py];
        
        if(x1 <= x4 && x2 <= x3) {
            if((m + n)%2 == 1) {
                return double(max(x1, x2));
            }
            return (max(x1, x2) + min(x3, x4))/2.0;
        }
        if(x1 > x4) {
            r = px - 1;
        }
        else {
            l = px + 1;
        }
    }
    
    return -1;
}

int main() {
    
    vector<int> arr = {-5, 3, 6, 12, 15};
    vector<int> brr = {-12, -10, -6, -3, 4, 10};
    
    double median;
    if(arr.size() > brr.size()) {
        median = findMedianSortedArrays(brr, arr);
    }
    else {
        median = findMedianSortedArrays(arr, brr);
    }
    cout<<"Median of two sorted arrays is :- "<<median;
    
    return 0;
}
